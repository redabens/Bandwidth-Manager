services:
  backend:
    build: ./backend
    ports:
      - "3000:3000"
    networks:
      qoe_network:
    depends_on:
      - prometheus

  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    networks:
      qoe_network:
    depends_on:
      - backend

  prometheus:
    build: ./prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      qoe_network:

  grafana:
    build: ./grafana
    ports:
      - "3001:3001"
    networks:
      qoe_network:
    depends_on:
      - prometheus

  # Le routeur optionnel avec RSVP activé pour gérer les requêtes de bande passante
  router:
    image: networkstatic/iperf3
    container_name: qoe_router
    command: "iperf3 -s"
    networks:
      qoe_network:
        # ipv4_address: 172.18.0.1
    cap_add:
      - NET_ADMIN
    privileged: true
  
  server:
    image: nginx
    networks:
      qoe_network:
        # ipv4_address: 172.18.0.2
    privileged: true

  client1:
    build:
      context: ./client # Assurez-vous que le Dockerfile est ici
    networks:
      qoe_network:
        # ipv4_address: 172.18.0.3
    cap_add:
    - NET_ADMIN
    privileged: true

  client2:
    build:
      context: ./client
    networks:
      qoe_network:
        # ipv4_address: 172.18.0.4
    cap_add:
    - NET_ADMIN
    privileged: true

  client3:
    build:
      context: ./client
    networks:
      qoe_network:
        # ipv4_address: 172.18.0.5
    cap_add:
    - NET_ADMIN
    privileged: true

networks:
  qoe_network:
    driver: bridge
    name: qoe_network  # Spécifie un nom explicite pour le réseau
    ipam:
      config:
        - subnet: 172.18.0.0/16