services:
  backend:
    build: ./backend
    ports:
      - "3000:3000"
    networks:
      qoe_network:
    depends_on:
      - prometheus

  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    networks:
      qoe_network:
    depends_on:
      - backend

  prometheus:
    build: ./prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      qoe_network:

  grafana:
    build: ./grafana
    ports:
      - "3001:3001"
    networks:
      qoe_network:
    depends_on:
      - prometheus

  # Le routeur optionnel avec RSVP activé pour gérer les requêtes de bande passante
  router:
    image: networkstatic/iperf3
    container_name: qoe_router
    command: "iperf3 -s"
    networks:
      qoe_network:
    depends_on:
      - backend

  # Les clients qui se connectent au serveur via le routeur
  client1:
    build: ./client
    container_name: qoe_client1
    networks:
      qoe_network:
    depends_on:
      - router
    command: "sh -c 'tc qdisc add dev eth0 root tbf rate 10mbit burst 32kbit latency 400ms && ping 8.8.8.8'"
    privileged: true  # Ajouté pour donner des privilèges supplémentaires

  client2:
    build: ./client
    container_name: qoe_client2
    networks:
      qoe_network:
    depends_on:
      - router
    command: "sh -c 'tc qdisc add dev eth0 root tbf rate 10mbit burst 32kbit latency 400ms && ping 8.8.8.8'"
    privileged: true  # Ajouté pour donner des privilèges supplémentaires

  client3:
    build: ./client
    container_name: qoe_client3
    networks:
      qoe_network:
    depends_on:
      - router
    command: "sh -c 'tc qdisc add dev eth0 root tbf rate 10mbit burst 32kbit latency 400ms && ping 8.8.8.8'"
    privileged: true  # Ajouté pour donner des privilèges supplémentaires

networks:
  qoe_network:
    driver: bridge
    name: qoe_network  # Spécifie un nom explicite pour le réseau
    ipam:
      config:
        - subnet: 172.18.0.0/16